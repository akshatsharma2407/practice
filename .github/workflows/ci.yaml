name : CI Pipeline

on : push

jobs : 
  project-testing:
    runs-on: ubuntu-latest

    steps:
     - name : checkout code
       uses : actions/checkout@v3

     - name : setup python
       uses : actions/setup-python@v2
       with : 
        python-version : '3.10'

     - name : Cache pip dependencies
       uses : actions/cache@v3
       with :
        path : ~/.cache/pip
        key : ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys : |
            ${{ runner.os }}-pip-

     - name : install dependencies
       run : |
          pip install -r requirements.txt

     - name : run pipeline
       env: 
        AKSHAT : ${{ secrets.AKSHAT }}
       run : |
          dvc repro
     
     - name : run test
       env :
        AKSHAT : ${{ secrets.AKSHAT }}
       run: |
          python -m unittest tests/test_model.py
     
     - name : promote model to production
       if : success()
       env : 
        AKSHAT : ${{ secrets.AKSHAT }}
       run : |
        python scripts/promote_model.py
     
     - name : run flask app tests
       if : success()
       env :
        AKSHAT : ${{ secrets.AKSHAT }}
       run : |
          python -m unittest tests/test_flask.py

     - name: Login to AWS ECR
       if: success()
       run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com

     - name: Build Docker image
       if: success()
       run: |
          docker build -t emotion1 .

     - name: Tag Docker image
       if: success()
       run: |
          docker tag emotion1:latest 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com/emotion1:latest

     - name: Push Docker image to AWS ECR
       if: success()
       run: |
          docker push 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com/emotion1:latest
     
     - name: Deploy to EC2
       if: success()
       uses: appleboy/ssh-action@v0.1.5
       with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ap-southeast-2
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com
            docker pull 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com/emotion1:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -p 80:5000 -e AKSHAT=8a0f419a615e6eae881208edae20992709002635 851725541946.dkr.ecr.ap-southeast-2.amazonaws.com/emotion1:latest